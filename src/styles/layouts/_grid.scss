@use '../base/variables' as *;
@use '../base/mixins' as *;

// Sistema de grid responsivo siguiendo CSS Grid y Flexbox
// Arquitectura modular para layouts escalables

.container {
  width: 100%;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
  margin-left: auto;
  margin-right: auto;

  @include respond-to(sm) {
    max-width: 540px;
  }

  @include respond-to(md) {
    max-width: 720px;
  }

  @include respond-to(lg) {
    max-width: 960px;
  }

  @include respond-to(xl) {
    max-width: 1140px;
  }

  @include respond-to(2xl) {
    max-width: 1320px;
  }
}

.container-fluid {
  width: 100%;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
}

// Grid system using CSS Grid
.grid {
  display: grid;
  gap: var(--spacing-md);

  &.gap-sm {
    gap: var(--spacing-sm);
  }

  &.gap-lg {
    gap: var(--spacing-lg);
  }

  &.gap-xl {
    gap: var(--spacing-xl);
  }
}

// Column classes for different breakpoints
@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span #{$i};
  }

  @include respond-to(sm) {
    .col-sm-#{$i} {
      grid-column: span #{$i};
    }
  }

  @include respond-to(md) {
    .col-md-#{$i} {
      grid-column: span #{$i};
    }
  }

  @include respond-to(lg) {
    .col-lg-#{$i} {
      grid-column: span #{$i};
    }
  }

  @include respond-to(xl) {
    .col-xl-#{$i} {
      grid-column: span #{$i};
    }
  }
}

// Grid template columns utilities
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }

// Responsive grid columns
@include respond-to(sm) {
  .grid-cols-sm-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
  .grid-cols-sm-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .grid-cols-sm-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .grid-cols-sm-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
}

@include respond-to(md) {
  .grid-cols-md-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
  .grid-cols-md-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .grid-cols-md-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .grid-cols-md-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .grid-cols-md-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
}

@include respond-to(lg) {
  .grid-cols-lg-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
  .grid-cols-lg-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .grid-cols-lg-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .grid-cols-lg-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .grid-cols-lg-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }
  .grid-cols-lg-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
  .grid-cols-lg-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }
}

// Flexbox system (alternativa/complemento a grid)
.flex {
  display: flex;

  &.flex-column {
    flex-direction: column;
  }

  &.flex-row-reverse {
    flex-direction: row-reverse;
  }

  &.flex-column-reverse {
    flex-direction: column-reverse;
  }

  &.flex-wrap {
    flex-wrap: wrap;
  }

  &.flex-nowrap {
    flex-wrap: nowrap;
  }

  &.justify-start {
    justify-content: flex-start;
  }

  &.justify-end {
    justify-content: flex-end;
  }

  &.justify-center {
    justify-content: center;
  }

  &.justify-between {
    justify-content: space-between;
  }

  &.justify-around {
    justify-content: space-around;
  }

  &.justify-evenly {
    justify-content: space-evenly;
  }

  &.items-start {
    align-items: flex-start;
  }

  &.items-end {
    align-items: flex-end;
  }

  &.items-center {
    align-items: center;
  }

  &.items-baseline {
    align-items: baseline;
  }

  &.items-stretch {
    align-items: stretch;
  }

  &.gap-sm {
    gap: var(--spacing-sm);
  }

  &.gap-md {
    gap: var(--spacing-md);
  }

  &.gap-lg {
    gap: var(--spacing-lg);
  }
}

// Flex item utilities
.flex-1 { flex: 1 1 0%; }
.flex-auto { flex: 1 1 auto; }
.flex-initial { flex: 0 1 auto; }
.flex-none { flex: none; }

.flex-grow { flex-grow: 1; }
.flex-grow-0 { flex-grow: 0; }

.flex-shrink { flex-shrink: 1; }
.flex-shrink-0 { flex-shrink: 0; }

// Layout espec√≠fico para el POS
.pos-layout {
  display: grid;
  grid-template-areas: 
    "header header"
    "sidebar main"
    "footer footer";
  grid-template-rows: auto 1fr auto;
  grid-template-columns: 250px 1fr;
  min-height: 100vh;

  @media (max-width: 768px) {
    grid-template-areas: 
      "header"
      "main"
      "footer";
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;
  }

  .header {
    grid-area: header;
  }

  .sidebar {
    grid-area: sidebar;
    
    @media (max-width: 768px) {
      display: none;
    }
  }

  .main {
    grid-area: main;
    overflow-y: auto;
  }

  .footer {
    grid-area: footer;
  }
}